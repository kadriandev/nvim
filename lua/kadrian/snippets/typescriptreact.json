{
  "FormField": {
    "body": [
      "<FormField",
      "  control={methods.control}",
      "  name=\"${1:name}\"",
      "  render={({ field }) => (",
      "    <FormItem>",
      "      <FormLabel>${2:label}</FormLabel>",
      "      <FormControl>",
      "        <Textarea {...field} />",
      "      </FormControl>",
      "    </FormItem>",
      "  )}",
      "/>"
    ],
    "prefix": "FormField"
  },
  "next-form": {
    "body": [
      "\"use client\";",
      "",
      "import { zodResolver } from \"@hookform/resolvers/zod\";",
      "import { useForm } from \"react-hook-form\";",
      "import { z } from \"zod\";",
      "import { Button } from \"@/components/ui/button\";",
      "import {",
      "  Form,",
      "  FormControl,",
      "  FormDescription,",
      "  FormField,",
      "  FormItem,",
      "  FormLabel,",
      "  FormMessage,",
      "} from \"@/components/ui/form\";",
      "import { Input } from \"@/components/ui/input\";",
      "",
      "const formSchema = z.object({",
      "  name: z.string(),",
      "});",
      "",
      "export default function ${1:formName}Form() {",
      "  const form = useForm<z.infer<typeof formSchema>>({",
      "    resolver: zodResolver(formSchema),",
      "    defaultValues: {",
      "      name: \"\",",
      "    },",
      "  });",
      "",
      "  function onSubmit(values: z.infer<typeof formSchema>) {",
      "    console.log(values);",
      "  }",
      "",
      "  return (",
      "    <Form {...form}>",
      "      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">",
      "        <FormField",
      "          control={form.control}",
      "          name=\"name\"",
      "          render={({ field }) => (",
      "            <FormItem>",
      "              <FormLabel>Name</FormLabel>",
      "              <FormControl>",
      "                <Input placeholder=\"Enter a name\" {...field} />",
      "              </FormControl>",
      "              <FormDescription>This is your username.</FormDescription>",
      "              <FormMessage />",
      "            </FormItem>",
      "          )}",
      "        />",
      "        <Button type=\"submit\">Submit</Button>",
      "      </form>",
      "    </Form>",
      "  );",
      "}"
    ],
    "prefix": "next-form"
  },
  "next-page": {
    "body": [
      "export default function ${1:pageName}Page() {",
      "  return <p>${1:pageName}Page</p>",
      "}"
    ],
    "prefix": "next-page"
  },
  "rafce": {
    "body": [
      "type ${1:ComponentName}Props = {",
      "    prop: string;",
      "}",
      "export const ${1:} = (props: ${1:}Props) => {",
      "    const { prop } = props;",
      "    return (",
      "        <div>",
      "            {prop}",
      "        </div>",
      "    );",
      "}"
    ],
    "prefix": "rafce"
  }
}
